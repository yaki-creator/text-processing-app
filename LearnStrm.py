from openai import OpenAI
import os
from dotenv import load_dotenv
import streamlit as st
import streamlit.components.v1 as components

MAX_TOKENS = 600

# Load your API key
load_dotenv()
client = OpenAI(api_key = os.getenv("OPENAI_API_KEY"))




def summarize_text(text):
    prompt = f"Please summarize the following text in the same language in which the text is written:\n\n{text}"

    response = client.chat.completions.create(
        model = "gpt-3.5-turbo",
        messages = [
            {"role":"system", "content":"You are a helpful assistant that summarizes text."},
            {"role":"user", "content":prompt}
        ],
        max_tokens = MAX_TOKENS
    )
    return response.choices[0].message.content

def translate_text(text):
    prompt = f"please translate the following text from Hebrew to English or from English to Hebrew:\n\n{text}"
    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[
            {"role":"system", "content":"You are a helpful assistant that translates text from Hebrew and English."},
            {"role":"user", "content":prompt}
        ],
        max_tokens = MAX_TOKENS
    )
    return response.choices[0].message.content

def understanding_questions(text):
    prompt = f"Please make a small number of comprehension questions about the following text in the same language as the text is written:\n\n{text}"
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role":"system", "content":"You are a helpful assistant that writes comprehension questions about texts."},
            {"role":"user", "content":prompt}
        ],
        max_tokens = MAX_TOKENS
    )
    return response.choices[0].message.content



# --- Page Configuration ---
st.set_page_config(
    page_title="Text Processing App",
    page_icon="üìù",
    layout="wide"
)



# --- help and instructions button ---
with st.popover("‚ùì", help="Click for instructions"):
    st.markdown("## üìñ How to Use This Tool")
    st.markdown("---")
    st.markdown("""
    ### Welcome to the Text Processing Tool!
    
    ##### This tool helps you perform various text-based operations using AI models.
    
    ### How It Works:
    
    1.  **Enter Text:** Paste or write your text in the main text box.
    2.  **Click the Button:** Press the "üöÄ Process Text" button to have the system process your text.
    
    ### What you'll get:
    
    * **Summary:** The app will automatically summarize your text.
    * **Translation:** An automatic translation of the text (from Hebrew to English or vice versa).
    * **Comprehension Questions:** A list of comprehension questions based on the content.
    
    """)

# --- Title and Header ---
st.markdown("<h1 style='text-align: center; color: #2E86C1;'>üìù Text Processing & Translation Tool</h1>", unsafe_allow_html=True)
st.markdown("<p style='text-align: center;'>Paste any text and get a summary, translation, and comprehension questions instantly!</p>", unsafe_allow_html=True)
st.markdown("---")

# --- Sidebar ---
st.sidebar.header("‚öôÔ∏è Options")
selected_AI = st.sidebar.selectbox("üß† Select AI Model", ["ChatGPT", "Gemini", "Grok"])



# --- Main Content Area ---

# 1. Text Input
st.markdown("### ‚úèÔ∏è Enter your text below:")
user_text = st.text_area("Paste your text here", height=250, placeholder="Type or paste your text here...")

# 2. Action Button
if st.button("üöÄ Process Text with " + selected_AI):
    if user_text:
        st.markdown("---")
        st.markdown("## üîç Results")

        # Summary
        st.subheader("üìò Summary")
        summary = summarize_text(user_text)
        st.info(summary)

        # Translation
        st.subheader("üåç Translated Text")
        translation = translate_text(user_text)
        st.success(translation)

        # Comprehension Questions
        st.subheader("üß† Comprehension Questions")
        questions_text = understanding_questions(user_text)
        st.warning(questions_text)

    else:
        st.warning("‚ö†Ô∏è Please enter some text to begin.")

# --- Footer ---

st.markdown("---")
st.markdown("""
<p style='text-align: center; font-size: 13px;'>üîß Built by Y.S</p>

<p style='text-align: center; font-size: 12px;'>
    This website uses OpenAI's GPT technology to generate content. Responses are generated by artificial intelligence and may contain errors or inaccuracies.<br>
    The information provided is for general informational purposes only and should not be considered professional advice.<br>
    Use of this site is at your own risk.
</p>

<hr style='border-top: 1px solid #bbb;'>

<h4 style='text-align: center;'>üìú Terms of Use</h4>
<p style='font-size: 12px; text-align: center;'>
    By using this website, you agree to the following terms:<br>
    ‚Ä¢ The content provided is generated by an artificial intelligence model (OpenAI's GPT).<br>
    ‚Ä¢ The information is for general informational purposes only and should not be considered professional advice.<br>
    ‚Ä¢ The site owner is not responsible for any actions taken based on the content generated.<br>
    ‚Ä¢ Use of the site is at your own risk.<br>
    ‚Ä¢ You may not use this site for illegal, harmful, or unethical purposes.<br>
    ‚Ä¢ The site may be modified or taken offline at any time without prior notice.
</p>

<h4 style='text-align: center;'>üîí Privacy Policy</h4>
<p style='font-size: 12px; text-align: center;'>
    ‚Ä¢ This site does not collect or store any personal data.<br>
    ‚Ä¢ Texts entered by users are sent to OpenAI‚Äôs API for processing, but are not stored by this site.<br>
    ‚Ä¢ We do not share any user data with third parties.<br>
    ‚Ä¢ By using the site, you consent to this processing of data.<br>
    ‚Ä¢ We use Streamlit Cloud to host the app. Their privacy practices apply as well.<br>
    ‚Ä¢ If you have concerns about data usage, avoid entering sensitive or personal information.
</p>

<p style='text-align: center; font-size: 11px;'>
    <em>Last updated: August 2025</em>
</p>
""", unsafe_allow_html=True)
